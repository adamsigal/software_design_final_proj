package TravelPackage;

import ModelPackages.*;
import ReservablePackage.*;
import SectionPackage.ISection;
import VehiculePackage.IVehicule;

import java.util.ArrayList;
import java.util.Objects;

public abstract class ITravel {

	protected String arrivalDate;
	protected String arrivalTime;
	protected String departureDate;
	protected String departureTime;
	protected IBuilding source;
	protected IBuilding destination;
	protected TravelId travelId;
	protected ICompany company;

	public ICompany getCompany() {
		return company;
	}

	public void setCompany(ICompany company) {
		this.company = company;
	}

	public String getArrivalDate() {
		return arrivalDate;
	}

	public void setArrivalDate(String arrivalDate) {
		this.arrivalDate = arrivalDate;
	}

	public String getArrivalTime() {
		return arrivalTime;
	}

	public void setArrivalTime(String arrivalTime) {
		this.arrivalTime = arrivalTime;
	}

	public String getDepartureDate() {
		return departureDate;
	}

	public void setDepartureDate(String departureDate) {
		this.departureDate = departureDate;
	}

	public String getDepartureTime() {
		return departureTime;
	}

	public void setDepartureTime(String departureTime) {
		this.departureTime = departureTime;
	}

	public IBuilding getSource() {
		return source;
	}

	public void setSource(IBuilding source) {
		this.source = source;
	}

	public IBuilding getDestination() {
		return destination;
	}

	public void setDestination(IBuilding destination) {
		this.destination = destination;
	}

	public TravelId getTravelId() {
		return travelId;
	}

	public void setTravelId(TravelId travelId) {
		this.travelId = travelId;
	}


	/**
	 * 
	 * @param v
	 */
	public String accept(Visitor v, char classe) {
		return v.visit(this, classe);
	}

	public java.util.ArrayList<SectionCount> getAvailableSeatsCounts() {
		// TODO - implement ITravel.getAvailableSeatsCounts
		throw new UnsupportedOperationException();
	}

	@Override
	public boolean equals(Object o) {
		//generated by intellij
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;
		ITravel iTravel = (ITravel) o;
		return arrivalDate.equals(iTravel.arrivalDate) &&
				arrivalTime.equals(iTravel.arrivalTime) &&
				departureDate.equals(iTravel.departureDate) &&
				departureTime.equals(iTravel.departureTime) &&
				source.equals(iTravel.source) &&
				destination.equals(iTravel.destination) &&
				travelId.equals(iTravel.travelId);
	}

}